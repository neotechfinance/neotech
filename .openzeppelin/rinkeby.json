{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7F9D177c1C8ca4ac76D28fE150E1ad020b78dF85",
    "txHash": "0x2180a97f1fad90d9e314e2974467ea4bd5c13e02bf4ee9517bfa9eff84c1d4f4"
  },
  "proxies": [
    {
      "address": "0x81fbf349f3d04763B157be5895bAb1AA2B63ec0d",
      "txHash": "0x7b7b273e80c201a0e8ddef0f5f2341161a94189c66d2d8f30497c5d844968162",
      "kind": "transparent"
    }
  ],
  "impls": {
    "12dec066103f864f1235807539aed015d247947c4f8720ce46ec69b79042ba04": {
      "address": "0x0CECf66E925797B32cee25Da0Df2C5Bf69ac93Ef",
      "txHash": "0x07b1ea02a5f9d1b8ac055ee4f2c40c6ee7c498b6891126c516c8f4408d5a1360",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "NeoTechNFT",
            "src": "contracts/NeoTechNFT.sol:11"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "NeoTechNFT",
            "src": "contracts/NeoTechNFT.sol:12"
          },
          {
            "label": "maxSupplyForCurrentPhase",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "NeoTechNFT",
            "src": "contracts/NeoTechNFT.sol:13"
          },
          {
            "label": "lastTokenId",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "NeoTechNFT",
            "src": "contracts/NeoTechNFT.sol:14"
          },
          {
            "label": "paused",
            "offset": 0,
            "slot": "205",
            "type": "t_bool",
            "contract": "NeoTechNFT",
            "src": "contracts/NeoTechNFT.sol:15"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "NeoTechNFT",
            "src": "contracts/NeoTechNFT.sol:16"
          },
          {
            "label": "paymentMethod",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "NeoTechNFT",
            "src": "contracts/NeoTechNFT.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
